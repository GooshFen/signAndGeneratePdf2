{# <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Le contrat de location</h1>

    Entre {{contrat.prenom }} {{contrat.nom}} et Jean-Bernard le vieux voleur de mes couilles.
</body>
</html> #}

{% extends 'base.html.twig' %}

{% block title %}Contrat{% endblock %}

{% block body %}

<canvas id="signature-pad" width="400" height="200"></canvas>

{{ form_start(formSignature) }}

<div class="col" id="some-custom-id" hidden>
    {{ form_widget(formSignature.signatureDataUrl) }}
</div>

<button class="btn" type="submit">{{ button_label|default('Save') }}</button>
{{ form_end(formSignature) }}


{% endblock %}

{% block javascripts %}
<script>

    let form = document.getElementById('signature');
    console.log(form)
    let canvas = document.getElementById('signature-pad');            
    let signaturePad = new SignaturePad(canvas);
    console.log(canvas)


        form.addEventListener('submit', function(e) { 
            e.preventDefault();
            let signatureDataUrl = signaturePad.toDataURL();
            document.getElementById('signature_signatureDataUrl').value = signatureDataUrl;
            document.getElementById('signature').submit();
        })
    </script>
{% endblock %}































{# function saveSignature() {
            var signatureDataUrl = signaturePad.toDataURL(); // Get signature data as a data URL
            let url = '/save-signature'
            // Send the signatureDataUrl to your Symfony backend
            // For example, you can use AJAX to send it to a Symfony controller
            // The controller can then embed the signature in the PDF
            // and return the signed PDF to be displayed or downloaded

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json', // Adjust the content type if necessary
                },
                body: JSON.stringify({ signatureDataUrl: signatureDataUrl }),
            })
                .then(response => response.json())
                .then(data => {
                    // Handle the response (e.g., display the signed PDF)
                    console.log(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
                    } #}